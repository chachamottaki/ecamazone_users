name: build and deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: build docker image and push to docker hub
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: user_microservice
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost -uroot -proot"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
    
    steps:   
    - name: checkout code
      uses: actions/checkout@v3
    - name: Setup Node.js environment
      uses: actions/setup-node@v2
      with:
        node-version: '18.18.0' # Mise à jour à la version 18.18.0 de Node.js

    - name: Install dependencies
      run: npm install
      working-directory: ./app

    - name: Wait for MySQL
      run: sleep 10

    - name: Run tests
      run: npm test -- --detectOpenHandles
      working-directory: ./app
      env:
        TEST_DB_HOST: 127.0.0.1
        TEST_DB_PORT: 3306
        TEST_DB_NAME: user_microservice
        TEST_DB_USER: root
        TEST_DB_PASSWORD: root
        PORT: 4000
    
    #Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push to registry
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: docchai/ecamazon_users:latest
        context: app
        
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v3
    
    - name: Create kubeconfig
      run: |
        mkdir ${HOME}/.kube
        echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 --decode > ${HOME}/.kube/config
        cat ${HOME}/.kube/config
    - name: Use Minikube context
      run: kubectl config use-context minikube
    - name: Deploy to Kubernetes
      run: kubectl apply -f ./app/appPod.yaml

